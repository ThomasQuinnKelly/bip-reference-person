# Global Server and Build Settings
# Learn: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-yaml-for-external-properties
info:  
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
server: 
  port: ${vetservices.server.port:8080}
---
spring.profiles: default
spring.profiles.include: remote_client_sims, embedded-redis
# spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
bip-vetservices-claims:
  ribbon:
    listOfServers: localhost:${server.port}
---
spring.profiles: local-int, ci, dev, stage, prod
spring.profiles.include: remote_client_sims
spring:
  datasource:
    url: jdbc:oracle:thin:@oracle:1521/ORCLCDB.localdomain
    username: sys as sysdba
    password: Oradoc_db1
    driver-class-name: oracle.jdbc.OracleDriver
    initialize: true
    data: classpath:/import.sql
  jpa:
    hibernate:
      ddl-auto: create
  hikari:
    connection-timeout: 60000
    maximum-pool-size: 5
---
spring: 
  cache:
    type: redis
  redis: 
    host: localhost
    port: 6379
  sleuth:
    stream:
      enabled: false 
  cloud:
    bus:
      enabled: false
  security:
    basic:
      enabled: false
    user:
      name: ${bip.framework.security.username:admin}
      password: ${bip.framework.security.password:default}
  # spring jackson mapper, serialization and deserialization global settings
  jackson:
    mapper:
      DEFAULT_VIEW_INCLUSION: true 
    serialization: 
      indent_output: true
      WRITE_DATES_AS_TIMESTAMPS: false
    deserialization:
      FAIL_ON_IGNORED_PROPERTIES: false
      FAIL_ON_UNKNOWN_PROPERTIES: false
      ACCEPT_SINGLE_VALUE_AS_ARRAY: true
    default-property-inclusion: non_empty
# Route Path
# service.context: http://localhost:8080

# expose all endpoints:
management.endpoints.web.exposure.include: "*"
# disable beans endpoint  
management.endpoint.beans.enabled: false
management.endpoint.health.show-details: "ALWAYS"
management:
  health:
    rabbit:
      enabled: false
    redis:
      enabled: false
#Application Custom Properties          
bip-vetservices-claims:
  env: default
  propSource: internal
  password: secret
  sampleProperty: >
                  sampleProperty___env/profile:${bip-vetservices-claims.env}___propSource:
                  ${bip-vetservices-claims.propSource}__password:${bip-vetservices-claims.password}
#-##################################################
# Logging Level for packages
#-##################################################
logging: 
  level:
    gov.va.bip.framework.ws.client: INFO
    gov.va.bip.framework.rest.provider: INFO
    gov.va.bip.vetservices.partner: INFO
    gov.va.bip.vetservices: INFO
    gov.va.bip.framework: INFO
    com.ecwid.consul: INFO
    org.springframework.cloud.openfeign: INFO
    org.springframework.security.web: INFO
    org.springframework.cloud.consul.config: INFO
    org.springframework.cloud.consul: INFO
    org.springframework.client.discovery: INFO
    org.springframework.cloud.sleuth: INFO 
    org.springframework.cloud.sleuth.log: INFO
    org.springframework.security: INFO
    org.springframework.ws: INFO
    org.springframework.web.client: INFO
    org.springframework.cache: INFO 
    org.apache.http.impl.client: INFO
    org.springframework.retry: INFO
    sun.net.www.protocol: INFO
    feign: INFO
##################################################
# Ribbon timeout, server refresh interval, retry
# settings for the requests
##################################################
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 5000
  ServerListRefreshInterval: 10000
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 2
  OkToRetryOnAllOperations: true
##################################################
# Disable hystrix for feign. Enable it if fallback
# needs to be implemented
##################################################
feign.hystrix.enabled: true
##################################################
# hystrix command settings
##################################################
hystrix:
  # set the hystrix.shareSecurityContext property to true. Doing so will auto configure an Hystrix concurrency strategy 
  # plugin hook who will transfer the SecurityContext from your main thread to the one used by the Hystrix command
 shareSecurityContext: true
 # set the hystrix.wrappers.enabled property to true. Doing so will auto configure an Hystrix concurrency strategy
 # plugin hook who will transfer the RequestContextHolder from your main thread to the one used by the Hystrix command
 # CUSTOM property used conditionally to register bean and HystrixPlugins concurrency strategy
 wrappers.enabled: true
 command:
  default:
    metrics:
      rollingStats:
        # This property sets the duration of the statistical rolling window, in milliseconds. 
        # This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing 
        # Default Value: 10000
        timeInMilliseconds: 20000
      # This property sets the time to wait, in milliseconds, between allowing health snapshots to be taken that calculate 
      # success and error percentages and affect circuit breaker status. 
      # Default Value: 500
      healthSnapshot: 
        intervalInMilliseconds: 1000
    circuitBreaker:
      # This property sets the amount of time, after tripping the circuit, to reject requests 
      # before allowing attempts again to determine if the circuit should again be closed.
      # Default Value: 5000
      sleepWindowInMilliseconds: 5000
      # This property sets the minimum number of requests in a rolling window that will trip the circuit.
      # Default Value: 20
      requestVolumeThreshold: 20
    execution:
      isolation:
        # strategy: SEMAPHORE
        thread:
          # This property sets the time in milliseconds after which the caller will observe a timeout and 
          # walk away from the command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback 
          # logic. Note that there is configuration for turning off timeouts per-command, if that is desired (see command.timeout.enabled).
          # Default Value: 1000
          timeoutInMilliseconds: 20000
###############################################################################
#Property configuration to enable or disable JWT security for the service calls 
#JWT security is enabled by default. So to disable it you have to
#set the environment system property os.reference.security.jwt.enabled=false
###############################################################################
bip.framework:
  security:
    jwt:
      enabled: true
      filterProcessUrls: 
        - /api/v1/claims/**
      excludeUrls:
        - /**
  swagger:
    title: BIP Vetservices Claims Spring Boot Service v1 API Documentation
    description: 
    groupName: "@project.name@-@project.version@"
    version: ${info.build.version}
    securePaths: /api/v?.*/claims.*
##################################################
# Feign or REST client connection timeout
# when making inter-service or external REST calls
##################################################
  rest:
   client:
     connectionTimeout: 30000
     readTimeout: 60000
     maxTotalPool: 5
     defaultMaxPerRoutePool: 10
     validateAfterInactivityPool: 10000
     connectionBufferSize: 4128
##################################################
# REDIS
##################################################
  cache:
    defaultExpires: 86400 # (Seconds)
    expires:
#     -
#       name: Cache Name
#       ttl:  TTL (In Seconds)
      -
        name: vetservicesClaimsService_@project.name@_@project.version@
        ttl: 1800
    redis-config:
      host: localhost
      port: 6379
##################################################
# Sleuth configuration     
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
##################################################
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
# comma separated list of matchers
spring.sleuth.rxjava.schedulers.ignoredthreads: HystixMetricPoller,^RxComputation.*$,^RxIoScheduler.*$