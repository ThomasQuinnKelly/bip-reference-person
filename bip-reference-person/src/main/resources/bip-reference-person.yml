# Global Server and Build Settings
# Learn: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-yaml-for-external-properties
info:  
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
server: 
  port: 8080
  max-http-header-size: 65536
---
spring.profiles: default
spring.profiles.include: remote_client_sims, embedded-redis, embedded-aws
bip-reference-person:
  ribbon:
    listOfServers: localhost:${server.port}
---
spring.profiles: local-int, ci, dev, stage, prod
spring.profiles.include: remote_client_sims
---
spring: 
  cache:
    type: redis
  # Properties for org.springframework.boot.autoconfigure.data.redis.RedisProperties
  redis:
    ssl: false
    host: localhost
    port: 6379
    # password:    # If host takes a password
    # url:         # URL overrides host/port/password
    # database: 0  # The database index to use
    # timeout:     # Connection timeout (millis)
    # Jedis is activated by being on the classpath
    jedis:
      # At least one variable *must* be set in order to enable the pool
      pool:
        # max-idle: 8   # Max number of idle connections in the pool
        # min-idle: 0   # Min number of idle connections to maintain
        # max-active: 8 # Max number of allocated connections (-1 for unlimited)
        max-wait: -1    # Max wait millis when pool is exhausted (-1 for unlimited)
    # cluster:
      # max-redirects: # Maximum number of redirects to follow when executing commands across the cluster
      # nodes:         # Comma-separated list of "host:port" pairs to bootstrap from
    # sentinel:
      # master:  # Name of the Redis server
      # nodes:   # Comma-separated list of "host:port" pairs
  sleuth:
    stream:
      enabled: false 
  cloud:
    bus:
      enabled: false
  security:
    basic:
      enabled: false
    user:
      name: ${bip.framework.security.username:admin}
      password: ${bip.framework.security.password:default}
  # spring jackson mapper, serialization and deserialization global settings
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    serialization-inclusion: NON_EMPTY
    default-property-inclusion: NON_EMPTY
    serialization: 
      indent_output: true
      write-dates-as-timestamps: false
    deserialization:
      FAIL_ON_IGNORED_PROPERTIES: false
      FAIL_ON_UNKNOWN_PROPERTIES: false
# Route Path
# service.context: http://localhost:8080

#management.endpoints.enabled-by-default: true
# expose all endpoints:
management.endpoints.web.exposure.include: "*"
# disable beans endpoint  
management.endpoint.beans.enabled: false
management.endpoint.health.show-details: "ALWAYS"
management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.health.rabbit.enabled: false
management.health.redis.enabled: false

#Application Custom Properties          
bip-reference-person:
  propSource: internal
  env: default
  password: secret
  sampleProperty: >
                  sampleProperty___env/profile:${bip-reference-person.env}___propSource:
                  ${bip-reference-person.propSource}__password:${bip-reference-person.password}
#-##################################################
# Logging Level for packages
#-##################################################
logging: 
  level:
    com.ecwid.consul: WARN
    feign: WARN
    gov.va.bip.reference.partner: INFO
    gov.va.bip.reference.person.client.rest.feign.FeignPersonClient: INFO
    # Change Value to DEBUG to log all application logs
    gov.va.bip.reference: INFO
    # Change Value to DEBUG to log all BIP framework logs
    gov.va.bip.framework: INFO
    # database logging
    org.h2: INFO
    org.postgresql: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.data: INFO
    org.springframework.jpa: INFO
    org.springframework.orm: INFO
    org.springframework.boot.autoconfigure.jdbc: INFO
    com.zaxxer.hikari: INFO
    org.liquibase: INFO
    #org.apache.http: DEBUG
    org.apache.http.impl.client: WARN
    #org.springframework: DEBUG
    org.springframework.cache: WARN
    org.springframework.client.discovery: WARN
    org.springframework.cloud.consul: WARN
    org.springframework.cloud.openfeign: WARN
    org.springframework.cloud.sleuth: WARN 
    org.springframework.core.convert: WARN
    org.springframework.format: WARN
    org.springframework.retry: WARN
    org.springframework.security: WARN
    org.springframework.security.web: WARN
    org.springframework.web.client: WARN
    org.springframework.ws: WARN
    sun.net.www.protocol: WARN
##################################################
# Ribbon timeout, server refresh interval, retry
# settings for the requests
##################################################
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 5000
  ServerListRefreshInterval: 10000
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 2
  OkToRetryOnAllOperations: true
##################################################
# Disable hystrix for feign. Enable it if fallback
# function needs to be implemented
##################################################
feign.hystrix.enabled: false
feign:
  client:
    config:
      "@project.name@":
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
# Configuration to add requestInterceptors
#        requestInterceptors:
#          - gov.va.bip.framework.feign.autoconfigure.TokenFeignRequestInterceptor
#################################################
# resilience4j settings
##################################################
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true
resilience4j.circuitbreaker:
  configs:
    default:
        registerHealthIndicator: false
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
           - java.lang.IllegalArgumentException 
           - gov.va.bip.framework.exception.BipException
           - gov.va.bip.framework.exception.BipRuntimeException
    shared:
        registerHealthIndicator: true
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 30
        waitDurationInOpenState: 1s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
           - java.lang.IllegalArgumentException 
           - gov.va.bip.framework.exception.BipException
           - gov.va.bip.framework.exception.BipRuntimeException 
resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: true
resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 2
      waitDuration: 100
      retryExceptions:
        - feign.FeignException
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
###############################################################################
# Property configuration to enable or disable JWT security for the service calls 
# JWT security is enabled by default. So to disable it you have to
# set the environment system property bip.framework.security.jwt.enabled=false
# Multiple consumers is now supported via framework. Multiple secret and Issuer 
# pairs can be configured in vault, example as below
# bip.framework.security.jwt.keyPairs[0].secret=secret
# bip.framework.security.jwt.keyPairs[0].issuer=Vets.gov
###############################################################################
bip.framework:
  security:
    jwt:
      enabled: true
      filterProcessUrls: 
        - /api/v1/persons/**
        - /api/v2/persons/**
      excludeUrls:
        - /**
  swagger:
    # enable/disable the swagger/openapi UI ...
    enabled: true
##################################################
# Feign or REST client connection timeout
# when making inter-service or external REST calls
##################################################
  rest:
    client:
      connectionTimeout: 30000
      readTimeout: 60000
      maxTotalPool: 5
      defaultMaxPerRoutePool: 10
      validateAfterInactivityPool: 10000
      connectionBufferSize: 4128
##################################################
# Cache
##################################################
  cache:
    defaultExpires: 86400 # (Seconds)
    expires:
#     -
#       name: Cache Name
#       ttl:  TTL (In Seconds)
      -
        name: refPersonService_@project.name@_@project.version@
        ttl: 1800
##################################################
# Sleuth configuration     
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
##################################################
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
# comma separated list of matchers
spring.sleuth.rxjava.schedulers.ignoredthreads: HystixMetricPoller,^RxComputation.*$,^RxIoScheduler.*$

#########################################################################
# Partner config properties
#
# These URLs use external service name entries
# in Consul to resolve to the appropriate partner endpoint for each env.
# 
# BGS-Specific SERVICE CLIENT PROPERTIES
#########################################################################
bgs:
  url: http://localhost:58540
  username: unitTestUsername
  password: unitTestPassword
  systemId: eBenefits
  vaApplicationName: eBenefits
  vaUCApplicationName: EBENEFITS
  stationId: 281
  default:
    methodWarningThreshhold: 2500
    readTimeout: 60000
    connectionTimeout: 60000

bip-reference-partner-person: 
  ws:
    client: 
      endpoint: ${bgs.url}/PersonWebService/PersonWebService?WSDL
      username: ${bgs.username}
      password: ${bgs.password}
      vaApplicationName: ${bgs.vaApplicationName}
      stationId: ${bgs.stationId}
      logValidation: false
      ### replace below values for endpoint-sepecific TTLs
      methodWarningThreshhold: ${bgs.default.readTimeout}
      readTimeout: ${bgs.default.connectionTimeout}
      connectionTimeout: ${bgs.default.methodWarningThreshhold}
      ssl:
        # For the JKS file on file system use absolute path value. For Example: 'file:/Users/akulkarni/Desktop/vaebnweb1Keystore.jks'
        keystore: ${javax.net.ssl.keyStore:classpath:test/ssl/dev/vaebnweb1Keystore.jks}
        keystorePass: ${javax.net.ssl.keyStorePassword:password}
        truststore: ${javax.net.ssl.trustStore:classpath:test/ssl/dev/vaebnTruststore.jks}
        truststorePass: ${javax.net.ssl.trustStorePassword:password}


#########################################################################
#########################################################################
####
####    DATABASE RELATED CONFIGURATION
####    1. Declare configuration for db type(s) and datasource(s)
####    2. Apply database configs to execution environments
####
#### see https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-configure-a-datasource
#########################################################################
#########################################################################

#### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
####    1. Declaration of database instances
####       - Define the database type through the jpa settings
####       - Define the datasource for the db, including any hikari pool config
####       - Declare any liquibase parameters to be passed from the spring env
####    Hikari Connection Pool settings can be refined on any below profile
####          by adjusting hikari properties directly
####          A list of all Hikari parameters with good explanations is available at
####          https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
####          Example properties:
#  hikari:
#    connection-timeout: 30000 # maximum number of milliseconds that a client will wait for a connection from connection pool
#    minimum-idle: 5 # minimum number of idle connections that is maintained by HikariCP in connection pool
#    maximum-pool-size: 12 # configures the maximum pool size
#    idle-timeout: 300000 # maximum amount of time in milliseconds that a connection is allowed to sit idle in connection pool
#    max-lifetime: 1200000 #  maximum life time in milliseconds of a connection in pool after it is closed
#    auto-commit: true # configures the default auto-commit behavior of connections returned from pool. Default value is true.
#### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

## >> To show multiple instances for one environment
##    This is the "primary" datasource for spring and liquibase,
##    as declared in gov.va.bip.reference.person.config.PersonDocsDatasourceConfig
## The datasource property name must match the property prefix in PersonDocsDatasourceConfig

### Datasource for database named "persondocs"
spring.profiles: db-persondocs
spring.h2.console.enabled: true
db.jpa.docs:
    database: h2
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        ddl-auto: none
db.datasource.docs:
    instance.name: persondocs
    type: com.zaxxer.hikari.HikariDataSource
    ### skip spring db init - using liquibase
    initialization-mode: never
    driver-class-name: org.h2.Driver
    url: jdbc:${db.jpa.docs.database}:mem:${db.datasource.docs.instance.name}
    ### user/pass must be set up in Vault, e.g. ${bip.database.[local|ci|dev|stage|prod].persondocs.[username|password]}
    username: 
    password: 
    hikari:
      connection-timeout: 4000
      maxLifetime: 50000
      minimum-idle: 4
      maximum-pool-size: 14
      idle-timeout: 40000
### Liquibase values. https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### PersonDocsDatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
db.liquibase.docs:
  parameters:
    db.instance.name: ${db.datasource.docs.instance.name}
    db.type.name: ${db.jpa.docs.database}
    # default liquibase changelog operation at startup
    liquibase.operation: dbinit
---
## >> To show multiple instances for one environment
##    This is the "non-primary" datasource,
##    as declared in gov.va.bip.reference.person.config.PersonInfoDatasourceConfig
## The datasource property name must match the property prefix in PersonInfoDatasourceConfig

### Datasource for database named "personinfo"
spring.profiles: db-personinfo
db.jpa.info:
    database: h2
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        ddl-auto: none
db.datasource.info:
    instance.name: personinfo
    type: com.zaxxer.hikari.HikariDataSource
    ### skip spring db init - using liquibase
    initialization-mode: never
    driver-class-name: org.h2.Driver
    url: jdbc:${db.jpa.info.database}:mem:${db.datasource.info.instance.name}
#    url: jdbc:${db.jpa.info.database}:file:/tmp/${db.datasource.info.instance.name}.db
    ### user/pass must be set up in Vault, e.g. ${bip.database.[local|ci|dev|stage|prod].persondocs.[username|password]}
    username: 
    password: 
    hikari:
      connection-timeout: 5000
      maxLifetime: 60000
      minimum-idle: 5
      maximum-pool-size: 15
      idle-timeout: 50000
### Liquibase values. https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### PersonInfoDatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
db.liquibase.info:
  parameters:
    db.instance.name: ${db.datasource.info.instance.name}
    db.type.name: ${db.jpa.info.database}
    # default liquibase changelog operation at startup
    liquibase.operation: dbinit
---
### EXAMPLE of a possible single-datasource dev db instance
spring.profiles: db-single-persondocs
spring.h2.console.enabled: true
spring.jpa:
    database: h2
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        ddl-auto: none
spring.datasource:
    instance.name: persondocs
    type: com.zaxxer.hikari.HikariDataSource
    ### skip spring db init - using liquibase
    initialization-mode: never
    driver-class-name: org.h2.Driver
    url: jdbc:${spring.jpa.database}:mem:${spring.datasource.instance.name}
    ### user/pass must be set up in Vault, e.g. ${bip.database.[local|ci|dev|stage|prod].persondocs.[username|password]}
    username: 
    password: 
    hikari:
      connection-timeout: 6000
      maxLifetime: 70000
      minimum-idle: 6
      maximum-pool-size: 16
      idle-timeout: 60000
### Liquibase values. https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### PersonDocsDatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
spring.liquibase:
  parameters:
    db.instance.name: ${spring.datasource.instance.name}
    db.type.name: ${spring.jpa.database}
    # default liquibase changelog operation at startup
    liquibase.operation: dbinit
---
### EXAMPLE of a possible oracle db instance
spring.profiles: db-single-oracle
spring.jpa:
    database: oracle
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.OracleDialect
        hibernate.format_sql: true
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        ddl-auto: none
spring.datasource:
    instance.name: persondocs
    type: com.zaxxer.hikari.HikariDataSource
    ### skip spring db init - using liquibase
    initialization-mode: never
    ### need to declare the driver name for oracle
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:${spring.jpa.database}:thin:@oracle:1521/corpstage
    ### user/pass must be set up in Vault, e.g. ${bip.database.[local|ci|dev|stage|prod].persondocs.[username|password]}
    username: ${bip.database.stage.persondocs.username}
    password: ${bip.database.stage.persondocs.password}
    hikari:
      connection-timeout: 7000
      maxLifetime: 17000
      minimum-idle: 7
      maximum-pool-size: 17
      idle-timeout: 7000
### Liquibase values. https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### PersonDocsDatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
spring.liquibase.docs:
  parameters:
    db.instance.name: ${spring.datasource.instance.name}
    db.type.name: ${spring.jpa.database}
    # default liquibase changelog operation at startup
    liquibase.operation: dbinit
---
#### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
####    2. Include profiles to apply database configs in execution environments
####       - Add db config to the relevant environment
####       - Tweak any instance/environment specific settings
#### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

### Add the "db-persondocs" and "db-personinfo" datasource profiles to the "default" environment
spring.profiles: default
spring.profiles.include: db-persondocs, db-personinfo
bip-reference-person:
  ribbon:
    listOfServers: localhost:${server.port}
spring.liquibase:
  enabled: false
  test-rollback-on-update: false
---
### EXAMPLE of a possible local-int / ci db run
### Add the "db-persondocs" and "db-personinfo" datasource profiles to the "local-int" and "ci" environments
spring.profiles: local-int, ci
spring.profiles.include: db-persondocs, db-personinfo
### Local-Int & CI values for Liquibase
### https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### Person*DatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
spring.liquibase:
  enabled: false
  test-rollback-on-update: false
---
### EXAMPLE of a possible dev db run
### Add the "db-persondocs" and "db-personinfo" datasource profiles to the "dev" environment
spring.profiles: dev
spring.profiles.include: db-persondocs, db-personinfo
### Dev values for Liquibase
### https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
### Person*DatasourceConfig automatically passes the datasource, so no need to specify url, user, or pass
spring.liquibase:
  enabled: false
  test-rollback-on-update: false
---
### EXAMPLE of a possible staging db run
### Addd the "db-single-oracle" datasource profile to the "stage" environment
spring.profiles: stage
spring.profiles.include: db-single-oracle
spring.datasource:
  url: ${spring.datasource.url}
  user: ${spring.datasource.username}
  password: ${spring.datasource.password}
### Stage values for Liquibase
### https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/common-application-properties.html
spring.liquibase:
  enabled: false
  test-rollback-on-update: true
---
### Localstack
bip.framework.localstack:
  enabled: false
  services:
    sns:
      enabled: false
      port: 4575
    sqs:
      enabled: false
      port: 4576
---
### AWS Service settings
### SQS and SNS Configurations for Bip Reference Person
bip.framework:
  aws:
    sqs:
      enabled: true
      #region: us-east-1

      endpoint: http://localstack:4576/queue/sub_new_queue
      #delay: 0
      #maxMessageSize: "262144"
      #messageRetentionPeriod: "345600"
      #waitTime: 0
      #visibilityTimeout: 30

      dlqEnabled: true
      dlqEndpoint: http://localstack:4576/queue/sub_new_queue_dead
      #maxReceiveCount: 1
      #dlqdelay: 0
      #dlqmaxMessageSize: "262144"
      #dlqmessageRetentionPeriod: "345600"
      #dlqwaitTime: 0
      #dlqvisibilityTimeout: 30

      #For SQS Configuration - Messaging Provider Configuration
      #numberOfMessagesToPrefetch: 0

      #For Message Listener Setup in QueueAsyncMessageReceiver
      #Defines the maximum number of times the message can enter the DLQ
      retries: 1

      #SQS key and id needs to be changed for upper environments
      #access_key_id: ${AWS_ACCESS_KEY}
      #secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    sns:
      enabled: true
      region: us-east-1
      endpoint: http://localstack:4575/topic/test_my_topic
      topicarn: arn:aws:sns:us-east-1:000000000000:test_my_topic
      name: test_my_topic
      message: "SNS Test Message"
      type: String

      #SNS key and id needs to be changed for upper environments
      #access_key_id: ${AWS_ACCESS_KEY}
      #secret_access_key: ${AWS_SECRET_ACCESS_KEY}

# Required or else an error occurs (Spring requirement)
cloud.aws.stack.auto: false
cloud.aws.region.static: us-east-1

# Required for localstack SQS integration
spring.sleuth.messaging.enabled: false