# Global Server and Build Settings
# Learn: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-yaml-for-external-properties
info:  
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
server: 
  port: 8080
---
spring.profiles: default
spring.profiles.include: remote_client_sims, embedded-redis
bip-reference-person:
  ribbon:
    listOfServers: localhost:${server.port}
---
spring.profiles: local-int, ci, dev, stage, prod
spring.profiles.include: remote_client_sims
---
spring: 
  cache:
    type: redis
  # Properties for org.springframework.boot.autoconfigure.data.redis.RedisProperties
  redis:
    ssl: false
    host: localhost
    port: 6379
    # If host takes a password
    # password: 
    # URL overrides host/port/password
    # url: 
    # The database index to use
    # database: 0
    # Connection timeout (millis)
    # timeout: 
    # Jedis is activated by being on the classpath
    jedis:
      # At least one variable *must* be set in order to enable the pool
      pool:
        # Max number of idle connections in the pool
        # max-idle: 8
        # Min number of idle connections to maintain
        # min-idle: 0
        # Max number of allocated connections (-1 for unlimited)
        # max-active: 8
        # Max wait millis when pool is exhausted (-1 for unlimited)
        max-wait: -1
    # cluster:
      # Maximum number of redirects to follow when executing commands across the cluster
      # max-redirects: 
      # Comma-separated list of "host:port" pairs to bootstrap from
      # nodes:
    # sentinel:
      # Name of the Redis server
      # master: 
      # Comma-separated list of "host:port" pairs
      # nodes: 
  sleuth:
    stream:
      enabled: false 
  cloud:
    bus:
      enabled: false
  security:
    basic:
      enabled: false
    user:
      name: ${bip.framework.security.username:admin}
      password: ${bip.framework.security.password:default}
  # spring jackson mapper, serialization and deserialization global settings
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    serialization-inclusion: NON_EMPTY
    default-property-inclusion: NON_EMPTY
    serialization: 
      indent_output: true
      write-dates-as-timestamps: false
    deserialization:
      FAIL_ON_IGNORED_PROPERTIES: false
      FAIL_ON_UNKNOWN_PROPERTIES: false
# Route Path
# service.context: http://localhost:8080

# expose all endpoints:
management.endpoints.web.exposure.include: "*"
# disable beans endpoint  
management.endpoint.beans.enabled: false
management.endpoint.health.show-details: "ALWAYS"
management:
  health:
    rabbit:
      enabled: false
    redis:
      enabled: false
#Application Custom Properties          
bip-reference-person:
  env: default
  propSource: internal
  password: secret
  sampleProperty: >
                  sampleProperty___env/profile:${bip-reference-person.env}___propSource:
                  ${bip-reference-person.propSource}__password:${bip-reference-person.password}
#-##################################################
# Logging Level for packages
#-##################################################
logging: 
  level:
     # gov.va.bip: DEBUG
    gov.va.bip.framework.client.ws: INFO
    gov.va.bip.framework.rest.provider: INFO
    gov.va.bip.reference.partner: INFO
    gov.va.bip.reference.person.client.rest.feign.FeignPersonClient: INFO
    gov.va.bip.reference: INFO
    gov.va.bip.framework: INFO
    com.ecwid.consul: INFO
    # org.springframework: DEBUG
    org.springframework.cloud.openfeign: INFO
    org.springframework.security.web: INFO
    org.springframework.cloud.consul.config: INFO
    org.springframework.cloud.consul: INFO
    org.springframework.client.discovery: INFO
    org.springframework.cloud.sleuth: INFO 
    org.springframework.cloud.sleuth.log: INFO
    org.springframework.security: INFO
    org.springframework.ws: INFO
    org.springframework.web.client: INFO
    org.springframework.cache: INFO 
    org.apache.http.impl.client: INFO
    org.springframework.retry: INFO
    sun.net.www.protocol: INFO
    feign: INFO
##################################################
# Ribbon timeout, server refresh interval, retry
# settings for the requests
##################################################
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 5000
  ServerListRefreshInterval: 10000
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 2
  OkToRetryOnAllOperations: true
##################################################
# Disable hystrix for feign. Enable it if fallback
# needs to be implemented
##################################################
feign.hystrix.enabled: true
##################################################
# hystrix command settings
##################################################
hystrix:
  # set the hystrix.shareSecurityContext property to true. Doing so will auto configure an Hystrix concurrency strategy 
  # plugin hook who will transfer the SecurityContext from your main thread to the one used by the Hystrix command
 shareSecurityContext: true
 # set the hystrix.wrappers.enabled property to true. Doing so will auto configure an Hystrix concurrency strategy
 # plugin hook who will transfer the RequestContextHolder from your main thread to the one used by the Hystrix command
 # CUSTOM property used conditionally to register bean and HystrixPlugins concurrency strategy
 wrappers.enabled: true
 command:
  default:
    metrics:
      rollingStats:
        # This property sets the duration of the statistical rolling window, in milliseconds. 
        # This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing 
        # Default Value: 10000
        timeInMilliseconds: 20000
      # This property sets the time to wait, in milliseconds, between allowing health snapshots to be taken that calculate 
      # success and error percentages and affect circuit breaker status. 
      # Default Value: 500
      healthSnapshot: 
        intervalInMilliseconds: 1000
    circuitBreaker:
      # This property sets the amount of time, after tripping the circuit, to reject requests 
      # before allowing attempts again to determine if the circuit should again be closed.
      # Default Value: 5000
      sleepWindowInMilliseconds: 5000
      # This property sets the minimum number of requests in a rolling window that will trip the circuit.
      # Default Value: 20
      requestVolumeThreshold: 20
    execution:
      isolation:
        # strategy: SEMAPHORE
        thread:
          # This property sets the time in milliseconds after which the caller will observe a timeout and 
          # walk away from the command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback 
          # logic. Note that there is configuration for turning off timeouts per-command, if that is desired (see command.timeout.enabled).
          # Default Value: 1000
          timeoutInMilliseconds: 20000
###############################################################################
#Property configuration to enable or disable JWT security for the service calls 
#JWT security is enabled by default. So to disable it you have to
#set the environment system property os.reference.security.jwt.enabled=false
###############################################################################
bip.framework:
  security:
    jwt:
      enabled: true
      filterProcessUrls: 
        - /api/v1/persons/**
        - /api/v2/persons/**
      excludeUrls:
        - /**
  swagger:
    title: BIP Reference Person Spring Boot Service v1 API Documentation
    description: 
    groupName: "@project.name@-@project.version@"
    version: ${info.build.version}
    securePaths: /api/v?.*/persons/.*
##################################################
# Feign or REST client connection timeout
# when making inter-service or external REST calls
##################################################
  rest:
    client:
      connectionTimeout: 30000
      readTimeout: 60000
      maxTotalPool: 5
      defaultMaxPerRoutePool: 10
      validateAfterInactivityPool: 10000
      connectionBufferSize: 4128
##################################################
# Cache
##################################################
  cache:
    defaultExpires: 86400 # (Seconds)
    expires:
#     -
#       name: Cache Name
#       ttl:  TTL (In Seconds)
      -
        name: refPersonService_@project.name@_@project.version@
        ttl: 1800
##################################################
# Sleuth configuration     
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
##################################################
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
# comma separated list of matchers
spring.sleuth.rxjava.schedulers.ignoredthreads: HystixMetricPoller,^RxComputation.*$,^RxIoScheduler.*$
#########################################################################
# Partner config properties
#
# These URLs use external service name entries
# in Consul to resolve to the appropriate partner endpoint for each env.
# 
# BGS-Specific SERVICE CLIENT PROPERTIES
#########################################################################
bgs:
  url: http://localhost:58540
  username: unitTestUsername
  password: unitTestPassword
  systemId: eBenefits
  vaApplicationName: eBenefits
  vaUCApplicationName: EBENEFITS
  stationId: 281
  default:
    methodWarningThreshhold: 2500
    readTimeout: 60000
    connectionTimeout: 60000

bip-reference-partner-person: 
  ws:
    client: 
      endpoint: ${bgs.url}/PersonWebService/PersonWebService?WSDL
      username: ${bgs.username}
      password: ${bgs.password}
      vaApplicationName: ${bgs.vaApplicationName}
      stationId: ${bgs.stationId}
      logValidation: false
      ### replace below values for endpoint-sepecific TTLs
      methodWarningThreshhold: ${bgs.default.readTimeout}
      readTimeout: ${bgs.default.connectionTimeout}
      connectionTimeout: ${bgs.default.methodWarningThreshhold}
      ssl:
        # For the JKS file on file system use absolute path value. For Example: 'file:/Users/akulkarni/Desktop/vaebnweb1Keystore.jks'
        keystore: ${javax.net.ssl.keyStore:classpath:test/ssl/dev/vaebnweb1Keystore.jks}
        keystorePass: ${javax.net.ssl.keyStorePassword:password}
        truststore: ${javax.net.ssl.trustStore:classpath:test/ssl/dev/vaebnTruststore.jks}
        truststorePass: ${javax.net.ssl.trustStorePassword:password}
